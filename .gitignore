# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# facebeak specific
# Database files
crow_embeddings.db
*.db
*.db-journal

# Data directories
videos/
crow_crops/
clustering_results/

# Video files
*.mp4
*.avi
*.mov
*.mkv
*.wav
*.flac
*.ogg
*.webm
sample.mp4
output.mp4
output/
temp_*.mp4

# Log files
facebeak_session.log
*.log
logs/

# Model files and weights
*.pkl
*.h5
*.model
*.weights
*.pt
*.pth
*.onnx
*.tflite
*.pb
models/
weights/

# Configuration and secrets
config.yaml
.env.local
.env.*.local
secrets.yaml
credentials.json
token.json
*.key
*.pem

# Temporary files
*.tmp
*.temp
.DS_Store
Thumbs.db

# Debug files
debug/
*.debug
*.prof
*.trace

# Output directories
output/
results/
exports/

# Cache directories
.cache/
__pycache__/
.pytest_cache/
.mypy_cache/
.ruff_cache/

# Documentation builds
docs/_build/
site/

# Test coverage
.coverage
coverage.xml
htmlcov/
.tox/
.nox/

# Environment variables
.env
.env.*
!.env.example

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Virtual Environment
venv/
ENV/

# IDE
.idea/
.vscode/
*.swp
*.swo

# Logs
*.log
logs/

# Output files
output/
backups/

# OS
.DS_Store
Thumbs.db

crow_crops/

# IDE and Editor files
.cursor/
.cursor.json
.vscode/
.idea/
.benchmarks/

# Project-specific generated files
clustering_metrics.json
crow_clusters_visualization.png
clustering_parameter_search.png
nonexistent.db
backups/
test_audio/
test_crops/
test_output/
unit_testing_videos/
training_output/
crow_crops_test_Sample/

# Media files (except documentation)
*.jpg
*.jpeg
*.png
!docs/*.jpg
!docs/*.jpeg
!docs/*.png
*.MOV
output.mp4

# Model files (should be downloaded separately)
yolov8s.pt
yolov8n.pt
crow_resnet_triplet.pth

# Personal data and models (not ignored - these are your private files)
# videos/
# crow_crops/
# yolov8s.pt
# yolov8n.pt
# crow_resnet_triplet.pth
# crow_embeddings.db

# Generated output (but not source data)
output.mp4
temp_*.mp4

# Large test output files that shouldn't be committed
test_output.txt
test_results*.txt
coverage_report.txt
changes_since_last_commit.diff

# Processing run metadata directories
run_*/
processing_runs/
processing/

# Additional generated files
*.diff
*_report.txt
